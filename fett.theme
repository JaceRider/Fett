<?php

/**
 * @file
 * Functions to support theming in Fett.
 */

include_once __DIR__ . '/includes/fett.offcanvas.php';
include_once __DIR__ . '/includes/fett.mobile_menu.php';

/**
 * Implements hook_theme().
 */
function fett_theme() {
  $module_path = drupal_get_path('theme', 'fett');
  return [
  ] + fett_offcanvas_theme($module_path);
}

/**
 * Implements hook_theme_registry_alter().
 */
function fett_theme_registry_alter(&$theme_registry) {
  // Add another page preprocess function that will get called after all child
  // theme preprocess functions.
  $theme_registry['page']['preprocess functions'][] = 'fett_preprocess_page_last';
}

/**
 * Implements hook_html_head_alter().
 */
function fett_html_head_alter(&$head_elements) {
  // HTML5 charset declaration.
  $head_elements['system_meta_content_type']['#attributes'] = array(
    'charset' => 'utf-8',
  );

  // Optimize mobile viewport.
  $head_elements['mobile_viewport'] = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(
      'name' => 'viewport',
      'content' => 'width=device-width, initial-scale=1',
    ),
  );
}

/**
 * Implements hook_library_info_alter().
 */
function fett_library_info_alter(&$libraries, $extension) {
  $active_theme = \Drupal::theme()->getActiveTheme();
  $theme = $active_theme->getName();
  if ($extension == 'fett' && $theme !== 'fett') {
    // Use subtheme vender javascript if it exists.
    $theme_path = $active_theme->getPath();
    foreach ($libraries as &$library) {
      if (!empty($library['bower'])) {
        if (!empty($library['js'])) {
          foreach ($library['js'] as $file => $data) {
            $new_path = $theme_path . '/' . $file;
            if (file_exists($new_path)) {
              $library['js']['/' . $new_path] = $data;
              unset($library['js'][$file]);
            }
          }
        }
      }
    }
  }
}

/**
 * Alter attachments (typically assets) to a page before it is rendered.
 *
 * Use this hook when you want to remove or alter attachments on the page, or
 * add attachments to the page that depend on another module's attachments (this
 * hook runs after hook_page_attachments().
 *
 * @param array &$page
 *   An empty renderable array representing the page.
 *
 * @see hook_page_attachments_alter()
 */
function fett_page_attachments_alter(array &$page) {
  $active_theme = \Drupal::theme()->getActiveTheme();
  $theme = $active_theme->getName();
  $theme_path = $active_theme->getPath();
  $config = \Drupal::config($theme . '.settings')->get('settings');

  // Process extension settings.
  if (isset($config['enable_extensions']) && $config['enable_extensions'] === 1) {

    // Attach poly-fills to support IE8.
    if (isset($config['enable_legacy_browsers']) && $config['enable_legacy_browsers'] === 1) {
      if (isset($config['legacy_browser_polyfills']) && $config['legacy_browser_polyfills'] === 1) {
        $page['#attached']['library'][] = 'fett/fett.html5shiv';
        $page['#attached']['library'][] = 'fett/fett.respond';
        $page['#attached']['library'][] = 'fett/fett.selectivizr';
      }
    }

  }
}

/**
 * Implements hook_preprocess_page().
 */
function fett_preprocess_page(&$vars) {
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  $config = \Drupal::config($theme . '.settings')->get('settings');

  $vars['prefix'] = isset($vars['prefix']) ? $vars['prefix'] : [];
  $vars['suffix'] = isset($vars['suffix']) ? $vars['suffix'] : [];
  $vars['attributes'] = isset($vars['attributes']) ? $vars['attributes'] : [];

  // Mobile menu ops
  fett_mobile_menu_preprocess_page($vars, $config);
}

/**
 * This page preprocess function will be called after all other preprocessing
 * has been completed.
 */
function fett_preprocess_page_last(&$vars) {
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  $config = \Drupal::config($theme . '.settings')->get('settings');

  // Offcanvas ops
  fett_offcanvas_preprocess_page($vars, $config);
}

/**
 * Implements hook_preprocess_html().
 */
function fett_preprocess_html(&$vars) {
}
